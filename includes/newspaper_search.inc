<?php
/**
 * @file
 *
 * Newspaper Search form 
 */

/**
 * Creates the custom search form for searching Manitoba's newspapers.
 *
 * @TODO: Limit searches based upon newspapers only.
 *
 * @param array $form
 *   The form to construct
 *
 * @param array $form_state
 *   Its state
 *
 * @return array
 *   The constructed form
 */
function manidora_newspaper_search_form($form, &$form_state) {
  module_load_include('inc', 'islandora_solr', 'includes/query_processor');
  module_load_include('inc', 'islandora_solr', 'includes/utilities');
  $solr_build = new IslandoraSolrQueryProcessor();

  $solr_query = '+RELS_EXT_hasModel_uri_ms:"info:fedora/islandora:newspaperCModel"';

  $solr_build->buildQuery($solr_query);

  $solr_build->solrParams['facet'] = $solr_build->solrParams['hl'] = 'false';
  $solr_build->solrParams = islandora_solr_remove_base_filters($solr_build->solrParams);

  try {
    $solr_build->executeQuery(FALSE);
    $results = $solr_build->islandoraSolrResult["response"]["objects"];
  } 
  catch (Exception $e) {
    $results = array();
    drupal_set_message(check_plain(t('Error searching Solr index')) . ' ' . $e->getMessage(), 'error', FALSE);
  }

  $all_years = array('min' => 10000, 'max' => 0);
  $tmpobjects = array();
  if ($results) {
    foreach ($results as $key => $doc) {
      if (strlen($doc['object_label']) > 0) {
        $tmpobjects[$doc['PID']] = $doc['object_label'];
        $sql = 'RELS_EXT_hasModel_uri_ms:"info:fedora/islandora:newspaperIssueCModel" AND ancestors_ms:"' . $doc['PID'] . '"';
        $sp = array(
          'facet' => 'false',
          'hl' => 'false',
          'rows' => 0,
          'stats' => 'true',
          'stats.field' => 'mods_originInfo_dateIssued_dt',
        );
        $solr_build->buildQuery($sql, $sp);
        $solr_build->solrParams = array_merge_recursive($solr_build->solrParams, $sp);
        $solr_build->solrParams = islandora_solr_remove_base_filters($solr_build->solrParams);
        try {
          $solr_build->executeQuery(FALSE);
          $years = $solr_build->islandoraSolrResult['stats']['stats_fields']['mods_originInfo_dateIssued_dt'];
        } 
        catch (Exception $e) {
          $years = array();
          drupal_set_message(check_plain(t('Error searching Solr index')) . ' ' . $e->getMessage(), 'error', FALSE);
        }

        $tmpobjects[$doc['PID']] .= ' (' . substr($years['min'], 0, 4) . '-' . substr($years['max'], 0, 4) . ')';
        if (substr($years['min'], 0, 4) < $all_years['min']) {
          $all_years['min'] = substr($years['min'], 0, 4);
        }
        if (substr($years['max'], 0, 4) > $all_years['max']) {
          $all_years['max'] = substr($years['max'], 0, 4);
        }
      }
    }
  }

  $form = array(
    'left_column' => array(
      '#type' => 'container',
      '#attributes' => array('class' => array('column-split-50')),
    ),
    'mid_column' => array(
      '#type' => 'container',
      '#attributes' => array('class' => array('column-split-25')),
    ),
    'right_column' => array(
      '#type' => 'container',
      '#attributes' => array('class' => array('column-split-25')),
    ),
  );

  $form['left_column']['exact_phrase'] = array(
    '#type' => 'textfield',
    '#title' => t('With the exact phrase'),
    '#size' => 50,
  );
  $form['left_column']['least_one'] = array(
    '#type' => 'textfield',
    '#title' => t('With at least one of the words'),
    '#size' => 50,
  );
  $form['left_column']['all_words'] = array(
    '#type' => 'textfield',
    '#title' => t('With all of the words'),
    '#size' => 50,
  );
  $form['left_column']['without_words'] = array(
    '#type' => 'textfield',
    '#title' => t('Without these words'),
    '#suffix' => '<p class="without-words-suffix">' . t('If you are searching for "Winnipeg football" but want to exclude references to the Winnipeg Blue Bombers in your search results, you would enter the words "Blue Bombers" in this box.') . '</p>',
    '#size' => 50,
  );
  $form['left_column']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#submit' => array('manidora_newspaper_search_form_submit'),
  );

  $form['mid_column']['titles'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Limit to only these titles'),
    '#options' => $tmpobjects,
    // '#default_value' => array_keys($tmpobjects),
  );
  $form['mid_column']['select_all'] = array(
    '#type' => 'markup',
    '#markup' => '<span id="manidora-newspaper-search-select-all"><a href="javascript://" onclick="jQuery(\'#edit-titles input:checkbox\').attr(\'checked\',\'checked\');">' . t('Select') . '</a>/<a href="javascript://" onclick="jQuery(\'#edit-titles input:checkbox\').removeAttr(\'checked\');">' . t('Deselect') . '</a> all titles</span>',
  );
  $form['mid_column']['browse'] = array(
    '#type' => 'markup',
    '#markup' => '<p>' . l(t('Browse all newspapers'), 'islandora/object/uofm:libraries') . '</p>',
  );
  $form['right_column']['date_text'] = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('date-limiter')),
    '#prefix' => '<p class="label">' . t('Limit to a date range') . '</p>',
    '#suffix' => '<p>Format (1900/05/23)</p>',
  );
  $form['right_column']['date_text']['date_from'] = array(
    '#type' => 'textfield',
    '#title' => t('from'),
    '#size' => 10,
    '#suffix' => '<span class="date-spacer">  ' . t('-') . '  </span>',
  );
  $form['right_column']['date_text']['date_to'] = array(
    '#type' => 'textfield',
    '#title' => t('to'),
    '#size' => 10,
  );
  if (isset($all_years) && count($all_years) > 0) {
    $form['right_column']['date_range_low'] = array(
      '#type' => 'hidden',
      '#value' => $all_years['min'],
    );
    $form['right_column']['date_range_high'] = array(
      '#type' => 'hidden',
      '#value' => $all_years['max'],
    );
  }

  drupal_set_title(t('Newspaper Search'));
  drupal_set_breadcrumb(array());

  return $form;
}

/**
 * Calls hook_form_validate for newspaper search.
 *
 * Validates date ranges if selected.
 *
 * @param array $form
 *   The form to submit
 * @param array $form_state
 *   Its state
 */
function manidora_newspaper_search_form_validate($form, &$form_state) {
  if (isset($form_state['values']['date_from']) && !empty($form_state['values']['date_from'])) {
    if (!preg_match('/^([0-9]{4})\/?([0-9]{2})?\/?([0-9]{2})?$/', $form_state['values']['date_from'], $bits)) {
      form_set_error('date_from', t('From date must be of the form "YYYY/MM/DD"'));
    }
    else {
      $from['year'] = $bits[1];
      $from['iso'] = $bits[1];
      if (count($bits) > 2) {
        $from['month'] = $bits[2];
        $from['iso'] .= $bits[2];
      }
      if (count($bits) > 3) {
        $from['day'] = $bits[3];
        $from['iso'] .= $bits[3];
      }
      if (array_key_exists('day', $from) && !checkdate($from['month'], $from['day'], $from['year'])) {
        form_set_error('date_from', t('From date was not valid, please ensure your date is of form "YYYY/MM/DD"'));
      }
    }
  }
  if (isset($form_state['values']['date_to']) && !empty($form_state['values']['date_to'])) {
    if (!preg_match('/^([0-9]{4})\/?([0-9]{2})?\/?([0-9]{2})?$/', $form_state['values']['date_to'], $bits)) {
      form_set_error('date_to', t('To date must be of the form "YYYY/MM/DD"'));
    }
    else {
      $to['year'] = $bits[1];
      $to['iso'] = $bits[1];
      if (count($bits) > 2) {
        $to['month'] = $bits[2];
        $to['iso'] .= $bits[2];
      }
      if (count($bits) > 3) {
        $to['day'] = $bits[3];
        $to['iso'] .= $bits[3];
      }
      if (array_key_exists('day', $to) && !checkdate($to['month'], $to['day'], $to['year'])) {
        form_set_error('date_to', t('To date was not valid, please ensure your date is of form "YYYY/MM/DD"'));
      }
    }
  }
  if (isset($from) && isset($to)) {
    if ($from['iso'] > $to['iso']) {
      form_set_error('date_from', t('From date cannot be larger than To date'));
    }
  }
  if (isset($form_state['values']['date_range_low'])) {
    if (isset($from) && $from['year'] > $form_state['values']['date_range_high']) {
      form_set_error('date_from', t('Our newspapers only go up to the year (%dt), please adjust your date range.', array('%dt' => $form_state['values']['date_range_high'])));

    }
    if (isset($to) && $to['year'] < $form_state['values']['date_range_low']) {
      form_set_error('date_to', t('Our newspapers only start at the year (%dt), please adjust your date range.', array('%dt' => $form_state['values']['date_range_low'])));
    }
  }
}

/**
 * Submit handler for the manidora_newspaper_search_form.
 *
 * Redirects to the islandora/solr/search menupath to execute the
 * given query.
 *
 * @param array $form
 *   The form to submit
 * @param array $form_state
 *   Its state
 */
function manidora_newspaper_search_form_submit($form, &$form_state) {
  global $_islandora_solr_queryclass;
  $query_string = '';
  $params = isset($_islandora_solr_queryclass->internalSolrParams) ? $_islandora_solr_queryclass->internalSolrParams : array();
  if (strlen($form_state['values']['all_words']) > 0) {
    $all_words = $form_state['values']['all_words'];
    $all_array = explode(' ', $all_words);

    $count = 0;
    foreach ($all_array as $word) {
      if ($count == 0) {
        $query_string .= '(' . $word;
      }
      else {
        $query_string .= ' && ' . $word;
      }
      $count++;
    }
    $query_string .= ')';
  }

  if (strlen($form_state['values']['exact_phrase']) > 0) {
    $exact_phrase = $form_state['values']['exact_phrase'];
    $exact_phrase = '"' . $exact_phrase . '"';

    if (!strlen($query_string)) {
      $query_string .= '(' . $exact_phrase . ')';
    }
    else {
      $query_string .= ' && (' . $exact_phrase . ')';
    }
  }

  // "x" or field:"y" or field:"z"
  if (strlen($form_state['values']['least_one']) > 0) {
    $least_one = $form_state['values']['least_one'];
    $least_array = explode(' ', $least_one);
    $count = 0;
    if (strlen($query_string)) {
      $query_string .= ' && ';
    }
    foreach ($least_array as $word) {
      if ($count == 0) {
        $query_string .= '(' . $word;
      }
      else {
        $query_string .= ' || ' . $word;
      }
      $count++;
    }
    $query_string .= ')';
  }

  // Negative of "with all of the words"
  if (strlen($form_state['values']['without_words']) > 0) {
    $without_words = $form_state['values']['without_words'];
    $without_array = explode(' ', $without_words);
    $count = 0;
    if (strlen($query_string)) {
      $query_string .= ' && ';
    }
    foreach ($without_array as $word) {
      if ($count == 0) {
        $query_string .= '-(' . $word;
      }
      else {
        $query_string .= ' && ' . $word;
      }
      $count++;
    }
    $query_string .= ')';
  }
  /* Date limiting */

  $iso_date = function($date) {
    $date_array = explode('/', $date);
    if (!isset($date_array[1])) {
      $date_array[1] = '01';
    }
    if (!isset($date_array[2])) {
      $date_array[2] = '01';
    }
    return vsprintf('%s-%s-%sT00:00:00Z', $date_array);
  };

  if (strlen($form_state['values']['date_from']) > 0) {
    $from = $iso_date($form_state['values']['date_from']);
  }

  if (strlen($form_state['values']['date_to']) > 0) {
    $to = $iso_date($form_state['values']['date_to']);
  }
  if (isset($from) || isset($to)) {
    if (!isset($from)) {
      $from = $form_state['values']['date_range_low'] . '-01-01T00:00:00Z';
    }
    if (!isset($to)) {
      $to = $form_state['values']['date_range_high'] . '-01-01T00:00:00Z';
    }
    $date_limit = 'mods_originInfo_dateIssued_dt:[' . $from . ' TO ' . $to . ']';
  }

  // Did we select at least 1, but not all newspapers?
  $selected_papers = array();
  foreach ($form_state['values']['titles'] as $key => $val) {
    if ($key === $val) {
      $selected_papers[] = $key;
    }
  }

  $hidden_filter = array('RELS_EXT_hasModel_uri_ms:("info:fedora/islandora:newspaperPageCModel" "info:fedora/islandora:newspaperCModel" "info:fedora/islandora:newspaperIssueCModel")');
  if (count($selected_papers) > 0 && count($selected_papers) < count($form_state['values']['titles'])) {
    $hidden_filter = array('ancestors_ms:("' . implode('" "', $selected_papers) . '")');
    // To show the facet.
    /* $query['f'] = array('ancestors_ms:("'.implode('" "', $selected_papers).'")'); */
  }
  $query_string = str_replace('/', '~slsh~', $query_string);
  /* $query = array(
  'type' => 'edismax',
  'hidden_filter' => $hidden_filter,
  );*/
  $params['type'] = 'edismax';
  $params['hidden_filter'] = $hidden_filter;
  // Set date filter key if there are no date filters included.
  if (isset($params['f'])) {
    foreach ($params['f'] as $key => $f) {
      if (strpos($f, $facet_field) !== FALSE) {
        array_splice($params['f'], $key);
      }
    }
    if (isset($date_limit)) {
      $params['f'][] = $date_limit;
    }
    $query = array_merge_recursive($params);
  }
  elseif (isset($date_limit)) {
    $query = array_merge_recursive($params, array('f' => array($date_limit)));
  }
  else {
    $query = $params;
  }

  drupal_goto('islandora/search/' . $query_string, array(
    'query' => $query,
  ));
}